/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-27 10:10:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardRead_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" initial-scal=\"1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/board.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/layout.css\">\n");
      out.write("<title>BoardRead.jsp</title>\n");
      out.write("<script language=javascript>\n");
      out.write("\n");
      out.write("function sendUpdate(){\n");
      out.write("		document.requestForm.command.value =\"updateForm\";\n");
      out.write("		document.requestForm.submit();\n");
      out.write("}	\n");
      out.write("\n");
      out.write("function sendDelete(){\n");
      out.write("		var password = prompt(\"삭제할 게시물의 사원번호 입력하세요(테스)\");	\n");
      out.write("		if(password){\n");
      out.write("			document.requestForm.command.value =\"delete\";\n");
      out.write("			document.requestForm.empno.value = empno;\n");
      out.write("			document.requestForm.submit();			\n");
      out.write("		}else{\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- 네비게이션 -->\n");
      out.write("<nav class=\"navbar navbar-default\">\n");
      out.write("		<!-- 네비게이션 상단 Header  --> \n");
      out.write("		<div class=\"navnar-header\">\n");
      out.write("			<button \n");
      out.write("				type=\"button\"\n");
      out.write("				class=\"navbar-toggle collapese\"\n");
      out.write("				data-toggle=\"collapse\"\n");
      out.write("				data-target=\"#bs-example-navbar-collapse-1\"\n");
      out.write("				aria-expanded=\"false\">\n");
      out.write("				\n");
      out.write("				<span class=\"icon-bar\"></span>\n");
      out.write("				<span class=\"icon-bar\"></span>\n");
      out.write("				<span class=\"icon-bar\"></span>\n");
      out.write("			</button>\n");
      out.write("			<a class=\"navbar-brand\" href=\"main.jsp\">\n");
      out.write("				PP 게시판 웹 사이트\n");
      out.write("			</a>			\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<!-- 메뉴 영역 깃허브 링크 이동 -->\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("			<ul class=\"nav navbar-nav\">\n");
      out.write("				<li><a href=\"#\">강보라</a></li>\n");
      out.write("				<li><a href=\"#\">김현민</a></li>\n");
      out.write("				<li><a href=\"#\">김민욱</a></li>\n");
      out.write("			</ul>		\n");
      out.write("		\n");
      out.write("			<!-- 메뉴 드랍다운 영역 -->\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("				<li class=\"dropdown\">\n");
      out.write("					<a href=\"#\"\n");
      out.write("						class=\"dropdown-toggle\"\n");
      out.write("						data-toggle=\"dropdown\"\n");
      out.write("						role=\"button\"\n");
      out.write("						aria-haspopup=\"true\"\n");
      out.write("						aria-expanded=\"false\"\n");
      out.write("					>\n");
      out.write("					사번  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("	\n");
      out.write("					<span class=\"caret\"></span>\n");
      out.write("					</a>\n");
      out.write("					\n");
      out.write("				<!-- 드랍다운 아이템 영역 -->\n");
      out.write("				<ul class=\"dropdown-menu\">\n");
      out.write("					<li class=\"active\"> \n");
      out.write("						<a href=\"logoutAction.jsp\">로그아웃</a>\n");
      out.write("					</li>\n");
      out.write("				</ul>\n");
      out.write("			</li>\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("</nav>\n");
      out.write("	\n");
      out.write("	<!-- 메인 이미지 -->\n");
      out.write("<div class=\"mainImg\"></div>\n");
      out.write("\n");
      out.write("<div class=\"board-wrap\">\n");
      out.write("	<div class=\"max-wrap\">\n");
      out.write("		<div class=\"read-title\">\n");
      out.write("			\n");
      out.write("			<p><span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.category}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("            <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.write_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("    	</div>\n");
      out.write("		<div class=\"read-conwrap\">\n");
      out.write("			<p class=\"ename\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.ename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("			\n");
      out.write("			<ul class=\"read-con\">\n");
      out.write("				<li>조회: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.readnum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </li>\n");
      out.write("				<li>좋아요: </li>\n");
      out.write("				<li>댓글: </li>\n");
      out.write("			</ul>\n");
      out.write("		</div>    \n");
      out.write("		\n");
      out.write("		<div class=\"board\">\n");
      out.write("			");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("		</div>	\n");
      out.write("     	\n");
      out.write("    ");
 String board_cnum = (String) request.getParameter("board_cnum"); 
      out.write("\n");
      out.write("    <div class=\"data-btn\">\n");
      out.write("    	<form name=\"requestForm\" method=post action=\"board.do?command=updateForm&board_cnum=");
      out.print(board_cnum );
      out.write("\">\n");
      out.write("			<input type=hidden name=board_cnum value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.board_cnum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("			<input type=hidden name=\"command\" value=\"read\">\n");
      out.write("			<input type=\"hidden\" name=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("			<input type=\"hidden\" name=\"content\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.resultContent.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">	\n");
      out.write("			<input type=button value=\"수정하기\" onClick=\"sendUpdate()\">\n");
      out.write("			<input type=button value=\"삭제하기\" onClick=\"sendDelete()\">\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<form id=\"loginForm\" name=\"emp\" action=\"board.do?command=backDrop\" method=\"post\">\n");
      out.write("		<button type=\"submit\">목록으로 ></button><br/>\n");
      out.write("	</form>\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<footer>\n");
      out.write("	<div class=\"max-wrap\">\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("</footer>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("<script src=\"js/bootstrap.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
