package board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import emp.EmpDTO;
import util.DBUtil;

public class BoardDAO {
	
	// 게시물 등록
	public static boolean writeContent(BoardDTO vo) throws SQLException{
		Connection con = null;	
		PreparedStatement pstmt = null;
		boolean result = false;
		
		String query ="insert into board(TITLE, EMPNO,CONTENT, CATEGORY) value(?,?,?,?)";
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(query);
			pstmt.setString(1, vo.getTitle());
			pstmt.setInt(2, vo.getEmpno()); 
	        pstmt.setString(3, vo.getContent());
	        pstmt.setString(4, vo.getCategory());
	        
			int count = pstmt.executeUpdate();			
			if(count != 0){
				result = true;
			}
		}finally{
			DBUtil.close(con, pstmt);
		}
		
		return result;		
	}
	
	// 모든 게시물 조회
	public static ArrayList<BoardDTO> getAllContents(int pageNumber) throws SQLException{
		Connection con = null;	
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		ArrayList<BoardDTO> alist = null;
		String query="select BOARD_CNUM, B.CATEGORY, B.TITLE, E.EMPNO, E.ENAME, B.WRITE_DATE, B.READNUM from BOARD B, EMP E WHERE E.EMPNO = B.EMPNO and B.DEL_YN = 'N' ORDER BY BOARD_CNUM DESC LIMIT ?, ?;";
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(query);
			pstmt.setInt(1, (pageNumber - 1) * 10);
			pstmt.setInt(2, 10);
			rset = pstmt.executeQuery();
			alist = new ArrayList<BoardDTO>();
			while(rset.next()){
				alist.add(new BoardDTO(rset.getInt(1),rset.getString(2),
						rset.getString(3),rset.getInt(4), rset.getString(5),rset.getString(6)
		 				,rset.getInt(7)));
			}
			
		}finally{
			DBUtil.close(rset, pstmt, con);
		}
		return alist;
	}
	
	// 모든 게시물 조회(어드민)
	public static ArrayList<BoardDTO> getAllContents4Admin(int pageNumber) throws SQLException{
		Connection con = null;	
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		ArrayList<BoardDTO> alist = null;
		String query="select BOARD_CNUM, B.CATEGORY, B.TITLE, E.EMPNO, E.ENAME, B.WRITE_DATE, B.READNUM from BOARD B, EMP E WHERE E.EMPNO = B.EMPNO ORDER BY BOARD_CNUM DESC LIMIT ?, ?;";
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(query);
			pstmt.setInt(1, (pageNumber - 1) * 10);
			pstmt.setInt(2, 10);
			rset = pstmt.executeQuery();
			alist = new ArrayList<BoardDTO>();
			while(rset.next()){
				alist.add(new BoardDTO(rset.getInt(1),rset.getString(2),
						rset.getString(3),rset.getInt(4), rset.getString(5),rset.getString(6)
		 				,rset.getInt(7)));
			}
			
		}finally{
			DBUtil.close(rset, pstmt, con);
		}
		return alist;
	}
	
	// 공지사항 게시물 조회
	public static ArrayList<BoardDTO> getAdminContents() throws SQLException{
		Connection con = null;	
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		ArrayList<BoardDTO> alist = null;
		String query="select BOARD_CNUM, B.CATEGORY, B.TITLE, E.EMPNO, E.ENAME, E.ADMIN_AUTHORITY, B.WRITE_DATE, B.READNUM from BOARD B, EMP E where B.DEL_YN = 'N' and E.EMPNO = B.EMPNO and E.ADMIN_AUTHORITY = 'ADMIN' order by BOARD_CNUM desc;";
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(query);
			rset = pstmt.executeQuery();
			alist = new ArrayList<BoardDTO>();
			while(rset.next()){
				alist.add(new BoardDTO(rset.getInt(1),rset.getString(2),
						rset.getString(3),rset.getInt(4), rset.getString(5),rset.getString(7)
		 				,rset.getInt(8)));
			}
			
		}finally{
			DBUtil.close(rset, pstmt, con);
		}
		return alist;
	}
	
	// 게시물 읽기 - boolean flag 값 = read인 경우 true, update인 경우  false
		public static BoardDTO getContent(int board_cnum, boolean flag) throws SQLException{		

			Connection con = null;	
			PreparedStatement pstmt = null;
			ResultSet rset = null;
			BoardDTO vo  = null;
			String query1="update BOARD set READNUM = READNUM+1 where BOARD_CNUM = ?";
			String query2="select B.TITLE, B.WRITE_DATE, B.CATEGORY, E.ENAME, B.READNUM, B.CONTENT from BOARD B, EMP E where B.empno = E.empno and board_cnum = ?";
			
			try {
				con = DBUtil.getConnection();
				if(flag){
					pstmt = con.prepareStatement(query1);
					pstmt.setInt(1, board_cnum);
					int count = pstmt.executeUpdate();
					if(count == 0){
						return vo;
					}
				}
				
				pstmt = con.prepareStatement(query2);
				pstmt.setInt(1, board_cnum);	
				rset = pstmt.executeQuery();
				
				if(rset.next()){
					vo = new BoardDTO(board_cnum,rset.getString(1),
							rset.getString(2), rset.getString(3), rset.getString(4),
							rset.getInt(5), rset.getString(6)
							);
				}
			}finally{
				DBUtil.close(rset, pstmt, con);
			}
			return vo;
		}
		
		//게시물 삭제
		public  static boolean deleteContent(int board_cnum) throws SQLException{
			Connection con = null;	
			PreparedStatement pstmt = null;
			boolean result = false;
			
			String query = "update board set del_yn='Y' where BOARD_CNUM = ?";
			
			try {
				con = DBUtil.getConnection();
				pstmt = con.prepareStatement(query);

				pstmt.setInt(1, board_cnum);

				int count = pstmt.executeUpdate();
				
				if(count != 0){
					result = true;
				}
			}finally{
				DBUtil.close(con, pstmt);
			}
			return result;
		}
		
		// 게시물 수정
		public static boolean updateContent(BoardDTO vo) throws SQLException{
			Connection con = null;	
			PreparedStatement pstmt = null;
			boolean result = false;
			String query = "update board set TITLE = ?, CONTENT = ?, CATEGORY = ? where board_cnum = ?";
			
			try {
				con = DBUtil.getConnection();
				pstmt = con.prepareStatement(query);
				
				pstmt.setString(1, vo.getTitle()); 
		        pstmt.setString(2, vo.getContent());
		        pstmt.setString(3, vo.getCategory());
		        pstmt.setInt(4, vo.getBoard_cnum());
		        
				int count = pstmt.executeUpdate();
				
				if(count != 0){
					result = true;
				}	
			}finally{
				DBUtil.close(con, pstmt);
			}
			return result;
		}

		public  static EmpDTO isAdmin(Integer empno) throws SQLException {
			Connection con = null; 
			PreparedStatement pstmt = null;
			ResultSet rset = null;
			EmpDTO emp  = null;
			
			try {
				con = DBUtil.getConnection();
				pstmt = con.prepareStatement("SELECT * FROM EMP WHERE EMPNO=?");
				pstmt.setInt(1, empno);
				
				rset = pstmt.executeQuery();
				
				System.out.println("민욱" +  rset);
				if(rset.next()) {
					emp = new EmpDTO(rset.getInt(1), rset.getString(3), rset.getString(4), rset.getString(5));
				}
				
				System.out.println("민욱2" + emp);

			} catch (SQLException e) {
				e.printStackTrace();
			}finally {
				DBUtil.close(rset, pstmt, con);
			}
			return emp;
		}
		
		public  static int nextNum() throws SQLException{
			Connection con = null;	
			PreparedStatement pstmt = null;
			ResultSet rset = null;
			int total = 0;
			String sqlTot = "SELECT COUNT(*) TOTAL FROM BOARD";
			
			
			try {
				con = DBUtil.getConnection();
				pstmt = con.prepareStatement(sqlTot);
				rset = pstmt.executeQuery();
				
				if(rset.next()) {
					total = rset.getInt("total");
					return total;
				}
			}finally{
				DBUtil.close(con, pstmt);
			}
			return 0;
		}
}
